{
  "name": "spritesheet-templates",
  "description": "Convert spritesheet data into CSS or CSS pre-processor data",
  "version": "8.2.1",
  "homepage": "https://github.com/twolfson/spritesheet-templates",
  "author": {
    "name": "Todd Wolfson",
    "email": "todd@twolfson.com",
    "url": "http://twolfson.com/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/twolfson/spritesheet-templates.git"
  },
  "bugs": {
    "url": "https://github.com/twolfson/spritesheet-templates/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/twolfson/spritesheet-templates/blob/master/LICENSE-MIT"
    }
  ],
  "main": "lib/spritesheet-templates",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "precheck": "twolfson-style precheck lib/ test/",
    "lint": "twolfson-style lint lib/ test/",
    "pretest": "twolfson-style install",
    "test": "npm run precheck && mocha --timeout 10000 && npm run lint"
  },
  "dependencies": {
    "json-content-demux": "~0.1.2",
    "mustache": "~0.7.0",
    "underscore": "~1.4.2"
  },
  "devDependencies": {
    "css-validator": "~0.5.0",
    "eight-track": "~1.3.0",
    "eight-track-normalize-multipart": "~0.1.0",
    "express": "~3.4.8",
    "jscs": "~1.8.1",
    "jshint": "~2.5.11",
    "less": "~1.5.1",
    "mocha": "~1.14.0",
    "stylus": "~0.41.3",
    "temporary": "0.0.5",
    "twolfson-style": "~1.6.0"
  },
  "keywords": [
    "json",
    "css",
    "sass",
    "scss",
    "stylus",
    "less",
    "sprite",
    "spritesheet",
    "template",
    "format"
  ],
  "readme": "# spritesheet-templates [![Build status](https://travis-ci.org/twolfson/spritesheet-templates.svg?branch=master)](https://travis-ci.org/twolfson/spritesheet-templates)\n\nConvert spritesheet data into CSS or CSS pre-processor data\n\n`spritesheet-templates`, formerly `json2css`, was built as part of [`spritesmith`][], a tool that converts images into spritesheets and CSS variables.\n\n[`spritesmith`]: https://github.com/Ensighten/spritesmith\n\n## Getting Started\nInstall the module with: `npm install spritesheet-templates`\n\n```js\n// Compilation\nvar templater = require('spritesheet-templates');\ntemplater({\n  items: [{\n    name: 'github', x: 0, y: 0, width: 10, height: 20\n  }, {\n    name: 'twitter', x: 10, y: 20, width: 20, height: 30\n  }, {\n    name: 'rss', x: 30, y: 50, width: 50, height: 50\n  }],\n  spritesheet: {\n    width: 80, height: 100, image: 'url/path/to/spritesheet.png'\n  }\n}, {format: 'stylus'}); /*\n// Result stylus\n$github_x = 0px;\n$github_y = 0px;\n...\n$github = 0px 0px 0px 0px 10px 20px 80px 100px 'url/path/to/spritesheet.png' 'github';\n...\n$twitter = 10px 20px -10px -20px 20px 30px 80px 100px 'url/path/to/spritesheet.png' 'twitter';\n...\n$rss = 30px 50px -30px -50px 50px 50px 80px 100px 'url/path/to/spritesheet.png' 'rss';\n...\nspriteWidth($sprite) {\n  width: $sprite[0];\n}\n...\nsprite($sprite) {\n  spriteImage($sprite)\n  spritePosition($sprite)\n  spriteWidth($sprite)\n  spriteHeight($sprite)\n}\n\n// Inside of your Stylus\n.github-logo {\n  sprite($github);\n}\n*/\n```\n\n## Documentation\n`spritesheet-templates` is exports the funciton `templater` as its `module.exports`.\n\n#### `templater(params, options)`\nConverter for spritesheet/sprite info into spritesheet\n\n- params `Object` - Container for parameters\n    - items `Object[]` - Array of objects with coordinate data about each sprite on the spritesheet\n        - * `Object` - Container for sprite coordinate data\n            - For reference, `*` symbolizes any index (e.g. `params.items[0]`)\n            - name `String` - Name to use for the image\n            - x `Number` - Horizontal coordinate of top-left corner of image\n            - y `Number` - Vertical coordinate of top-left corner of image\n            - width `Number` - Horizontal length of image in pixels\n            - height `Number` - Vertical length of image in pixels\n    - spritesheet `Object` - Information about spritesheet\n        - width `Number` - Horizontal length of image in pixels\n        - height `Number` - Vertical length of image in pixels\n        - image `String` - URL to use for spritesheet\n            - This will typically be used in `background-image`\n            - For example, `background-image: url({{spritesheet.image}});`\n- options `Object` - Optional settings\n    - spritesheetName `String` - Prefix to use for all spritesheet variables\n        - For example, `icons` will generate `$icons-width`/`$icons-image`/etc in a Stylus template\n        - By default, this is `spritesheet` (e.g. `$spritesheet-width`, `$spritesheet-image`)\n    - format `String` - Format to generate output in\n        - We accept any format inside of the [Templates section](#templates)\n            - Custom formats can be added via the [custom methods](#custom)\n        - By default, we will use the `css` format\n    - formatOpts `Mixed` - Options to pass through to the formatter\n\n**Returns:**\n\n- retVal `String` - Result from specified formatter\n\n### Templates\nThese are the various template options for `options.format`:\n\n#### `css`\nOuput CSS variables as CSS rules.\n\n**Options:**\n\n- cssSelector `Function` - Override mapping for CSS selector\n    - `cssSelector` should have signature `function (item) { return 'selector'; }`\n    - By default this will return `'.icon-' + item.name`\n    - It will receive `item` with all parameters designed for template\n\n**Example:**\n\n```css\n.icon-sprite1 {\n  background-image: url(nested/dir/spritesheet.png);\n  background-position: 0px 0px;\n  width: 10px;\n  height: 20px;\n}\n.icon-sprite2 {\n/* ... */\n```\n\n#### `json`\nOutput CSS variables in JSON format.\n\n**Example:**\n\n```js\n{\n    \"sprite1\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 10,\n        \"height\": 20,\n        \"total_width\": 80,\n        \"total_height\": 100,\n        \"image\": \"nested/dir/spritesheet.png\",\n        \"offset_x\": 0,\n        \"offset_y\": 0,\n        \"px\": {\n            \"x\": \"0px\",\n            \"y\": \"0px\",\n            \"offset_x\": \"0px\",\n            \"offset_y\": \"0px\",\n            \"height\": \"20px\",\n            \"width\": \"10px\",\n            \"total_height\": \"100px\",\n            \"total_width\": \"80px\"\n        },\n        \"escaped_image\": \"nested/dir/spritesheet.png\"\n    },\n    \"sprite2\": {\n    // ...\n```\n\n#### `json_array`\nOutput CSS variables as an array of objects.\n\n**Example:**\n\n```js\n[\n    {\n        \"name\": \"sprite1\",\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 10,\n        \"height\": 20,\n        \"total_width\": 80,\n        \"total_height\": 100,\n        \"image\": \"nested/dir/spritesheet.png\",\n        \"offset_x\": 0,\n        \"offset_y\": 0,\n        \"px\": {\n            \"x\": \"0px\",\n            \"y\": \"0px\",\n            \"offset_x\": \"0px\",\n            \"offset_y\": \"0px\",\n            \"height\": \"20px\",\n            \"width\": \"10px\",\n            \"total_height\": \"100px\",\n            \"total_width\": \"80px\"\n        },\n        \"escaped_image\": \"nested/dir/spritesheet.png\"\n    },\n    {\n        \"name\": \"sprite2\",\n        // ...\n```\n\n#### `less`\nOutput CSS variables as [LESS][] variables.\n\n**Options:**\n\n- functions `Boolean` - Flag to include mixins or not\n    - By default this is `true` (mixins will be included)\n\n**Example:**\n\n```less\n@sprite1-name: 'sprite1';\n@sprite1-x: 0px;\n@sprite1-y: 0px;\n@sprite1-offset-x: 0px;\n@sprite1-offset-y: 0px;\n@sprite1-width: 10px;\n@sprite1-height: 20px;\n@sprite1-total-width: 80px;\n@sprite1-total-height: 100px;\n@sprite1-image: 'nested/dir/spritesheet.png';\n@sprite1: 0px 0px 0px 0px 10px 20px 80px 100px 'nested/dir/spritesheet.png' 'sprite1';\n@sprite2-name: 'sprite2';\n// ...\n```\n\n[LESS]: http://lesscss.org/\n\n#### `sass`\nOutput CSS variables as [SASS][] variables.\n\n**Options:**\n\n- functions `Boolean` - Flag to include mixins or not\n    - By default this is `true` (mixins will be included)\n\n**Example:**\n\n```sass\n$sprite1-name: 'sprite1'\n$sprite1-x: 0px\n$sprite1-y: 0px\n$sprite1-offset-x: 0px\n$sprite1-offset-y: 0px\n$sprite1-width: 10px\n$sprite1-height: 20px\n$sprite1-total-width: 80px\n$sprite1-total-height: 100px\n$sprite1-image: 'nested/dir/spritesheet.png'\n$sprite1: 0px 0px 0px 0px 10px 20px 80px 100px 'nested/dir/spritesheet.png' 'sprite1'\n$sprite2-name: 'sprite2'\n// ...\n```\n\n[SASS]: http://sass-lang.com/\n\n#### `scss`\nOutput CSS variables as [SCSS][] variables.\n\n**Options:**\n\n- functions `Boolean` - Flag to include mixins or not\n    - By default this is `true` (mixins will be included)\n\n**Example:**\n\n```scss\n$sprite1-name: 'sprite1';\n$sprite1-x: 0px;\n$sprite1-y: 0px;\n$sprite1-offset-x: 0px;\n$sprite1-offset-y: 0px;\n$sprite1-width: 10px;\n$sprite1-height: 20px;\n$sprite1-total-width: 80px;\n$sprite1-total-height: 100px;\n$sprite1-image: 'nested/dir/spritesheet.png';\n$sprite1: 0px 0px 0px 0px 10px 20px 80px 100px 'nested/dir/spritesheet.png' 'sprite1';\n$sprite2-name: 'sprite2';\n// ...\n```\n\n[SCSS]: http://sass-lang.com/\n\n#### `scss_maps`\nOutput CSS variables as [SCSS][] maps variables.\n\n**Options:**\n\n- functions `Boolean` - Flag to include mixins or not\n    - By default this is `true` (mixins will be included)\n\n**Example:**\n\n```scss\n$sprite1: (\n  name: 'sprite1',\n  x: 0px,\n  y: 0px,\n  offset_x: 0px,\n  offset_y: 0px,\n  width: 10px,\n  height: 20px,\n  total_width: 80px,\n  total_height: 100px,\n  image: 'nested/dir/spritesheet.png'\n);\n$sprite2: (\n// ...\n```\n\n#### `stylus`\nOutput CSS variables as [Stylus][] variables.\n\n**Options:**\n\n- functions `Boolean` - Flag to include mixins or not\n    - By default this is `true` (mixins will be included)\n\n**Example:**\n\n```scss\n$sprite1_name = 'sprite1';\n$sprite1_x = 0px;\n$sprite1_y = 0px;\n$sprite1_offset_x = 0px;\n$sprite1_offset_y = 0px;\n$sprite1_width = 10px;\n$sprite1_height = 20px;\n$sprite1_total_width = 80px;\n$sprite1_total_height = 100px;\n$sprite1_image = 'nested/dir/spritesheet.png';\n$sprite1 = 0px 0px 0px 0px 10px 20px 80px 100px 'nested/dir/spritesheet.png';\n$sprite2_name = 'sprite2';\n// ...\n```\n\n[Stylus]: http://learnboost.github.io/stylus/\n\n#### Custom\nCustom templates can be added dynamically via `templater.addTemplate` and `templater.addMustacheTemplate`.\n\n##### Template data\nThe parameters passed into your template are known as `params`. These are a cloned copy of the `params` originally passed in. We add some normalized properties for your convenience.\n\n- params `Object` - Container for parameters\n    - items `Object[]` - Array of objects with coordinate data about each sprite on the spritesheet\n        - * `Object` - Container for sprite coordinate data\n            - For reference, `*` symbolizes any index (e.g. `params.items[0]`)\n            - name `String` - Name to use for the image\n            - x `Number` - Horizontal coordinate of top-left corner of image\n            - y `Number` - Vertical coordinate of top-left corner of image\n            - width `Number` - Horizontal length of image in pixels\n            - height `Number` - Vertical length of image in pixels\n            - total_width `Number` - Width of entire spritesheet\n            - total_height `Number` - Height of entire spritesheet\n            - image `String` - URL path to spritesheet\n            - escaped_image `String` - URL encoded `image`\n            - offset_x `Number` - Negative value of `x`. Useful to `background-position`\n            - offset_y `Number` - Negative value of `y`. Useful to `background-position`\n            - px `Object` - Container for numeric values including `px`\n                - x `String` - `x` suffixed with `px`\n                - y `String` - `y` suffixed with `px`\n                - width `String` - `width` suffixed with `px`\n                - height `String` - `height` suffixed with `px`\n                - total_width `String` - `total_width` suffixed with `px`\n                - total_height `String` - `total_height` suffixed with `px`\n                - offset_x `String` - `offset_x` suffixed with `px`\n                - offset_y `String` - `offset_y` suffixed with `px`\n    - spritesheet `Object` - Information about spritesheet\n        - width `Number` - Horizontal length of image in pixels\n        - height `Number` - Vertical length of image in pixels\n        - image `String` - URL to use for spritesheet\n            - This will typically be used in `background-image`\n            - For example, `background-image: url({{spritesheet.image}});`\n        - escaped_image `String` - URL encoded `image`\n        - px `Object` container for numeric values including `px`\n            - width `String` - `width` suffixed with `px`\n            - height `String` - `height` suffixed with `px`\n    - spritesheet_name `String` - Name for spritesheet\n    - options `Mixed` - Options to passed through via `options.formatOpts`\n\n##### `templater.addTemplate(name, fn)`\nMethod to define a custom template under the format of `name`.\n\n- name `String` - Key to store template under for reference via `options.format`\n- fn `Function` - Template function\n    - Should have signature of `function (params)` and return a `String` output\n\n##### `templater.addMustacheTemplate(name, tmplStr)`\nMethod to define a custom mustache template under the format of `name`.\n\n- name `String` - Key to store template under for reference via `options.format`\n- tmplStr `String` - Mustache template to use for formatting\n    - This will receive `params` as its `data` (e.g. `{{items}}` is `params.items`)\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint via `npm run lint` and test via `npm test`.\n\n## Donating\nSupport this project and [others by twolfson][gratipay] via [gratipay][].\n\n[![Support via Gratipay][gratipay-badge]][gratipay]\n\n[gratipay-badge]: https://cdn.rawgit.com/gratipay/gratipay-badge/2.x.x/dist/gratipay.png\n[gratipay]: https://www.gratipay.com/twolfson/\n\n## Unlicense\nAs of Sep 08 2013, Todd Wolfson has released this repository and its contents to the public domain.\n\nIt has been released under the [UNLICENSE][].\n\n[UNLICENSE]: UNLICENSE\n\nPrior to Sep 08 2013, this repository and its contents were licensed under the [MIT license][].\n\n[MIT license]: https://github.com/twolfson/spritesheet-templates/blob/e601307209b75faa48cb65388a17e0047b561aa0/LICENSE-MIT\n",
  "readmeFilename": "README.md",
  "_id": "spritesheet-templates@8.2.1",
  "dist": {
    "shasum": "51c3e8a2684f477009160028394edc9e12a5aa14"
  },
  "_from": "spritesheet-templates@~8.2.0",
  "_resolved": "http://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-8.2.1.tgz"
}
